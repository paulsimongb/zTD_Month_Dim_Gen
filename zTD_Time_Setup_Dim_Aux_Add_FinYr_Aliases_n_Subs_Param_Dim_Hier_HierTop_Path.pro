601,100
602,"zTD_Time_Setup_Dim_Aux_Add_FinYr_Aliases_n_Subs_Param_Dim_Hier_HierTop_Path"
562,"VIEW"
586,"zTD_Wide_Cube"
585,"zTD_Wide_Cube"
564,
565,"tbF=iSlYpOo]y[V>uTRha>R]H1OSMG;oQc2zgz[PmDCCKo^Q@j^TGCWxe=9oD3Az7?gp2YwDN<>_p7hqrppzr_OD:77\a6?o\V=CM:C>S5<KaQGK1=<Mg?1_Z5N]1;@L_IRXWK1JWKaqj2CYL9bAlZ0P[jB\18OG_b8DzFbY\^OLC;veJ4ACRDM?jnm0Lc[M\V=3Rr0f"
559,1
928,0
593,
594,
595,
597,
598,
596,
800,
801,
566,0
567,","
588,"."
589,","
568,""""
570,zTD_All
571,
569,1
592,0
599,1000
560,4
pDim
pHier
pHierTop
pPath
561,4
2
2
2
2
590,4
pDim,""
pHier,""
pHierTop,""
pPath,""
637,4
pDim,"Dimension"
pHier,"Hier"
pHierTop,"Hier Top Element"
pPath,"Folder Path relative to the Server where the CSV files were generated by the spreadsheet."
577,4
StartMthNum
NVALUE
SVALUE
VALUE_IS_STRING
578,4
2
1
2
1
579,4
1
0
0
0
580,4
0
0
0
0
581,4
0
0
0
0
582,21
VarType=32ColType=827
IgnoredInputVarName=zTD_D2VarType=32ColType=1165
IgnoredInputVarName=zTD_D3VarType=32ColType=1165
IgnoredInputVarName=zTD_D4VarType=32ColType=1165
IgnoredInputVarName=zTD_D5VarType=32ColType=1165
IgnoredInputVarName=zTD_D6VarType=32ColType=1165
IgnoredInputVarName=zTD_D7VarType=32ColType=1165
IgnoredInputVarName=zTD_D8VarType=32ColType=1165
IgnoredInputVarName=zTD_D9VarType=32ColType=1165
IgnoredInputVarName=zTD_D10VarType=32ColType=1165
IgnoredInputVarName=zTD_D11VarType=32ColType=1165
IgnoredInputVarName=zTD_D12VarType=32ColType=1165
IgnoredInputVarName=zTD_D13VarType=32ColType=1165
IgnoredInputVarName=zTD_D14VarType=32ColType=1165
IgnoredInputVarName=zTD_D15VarType=32ColType=1165
IgnoredInputVarName=zTD_D16VarType=32ColType=1165
IgnoredInputVarName=zTD_D17VarType=32ColType=1165
IgnoredInputVarName=zTD_D18VarType=32ColType=1165
IgnoredInputVarName=zTD_D19VarType=32ColType=1165
IgnoredInputVarName=zTD_D20VarType=32ColType=1165
IgnoredInputVarName=ValueVarType=33ColType=1165
603,0
572,111

#****Begin: Generated Statements***
#****End: Generated Statements****

vThisPro = 'zTD_Time_Setup_Dim_Aux_Add_FinYr_Aliases_n_Subs_Param_Dim_Hier_HierTop_Path' ;

# Copyright Success Cubed Ltd 2008-2020

# This inserts a Fin Yr Alias for each Fin Yr that the user wants in this time dimension
# It this creates a set of standard subsets with each of the FinYr Aliases.


# NON-STANDARD CUT DOWN ERROR HANDLING
# This process does not use the full set of zTD
# process initialisation and error handling routines

# ###############################################

# Session Variables

NumericSessionVariable('svError') ;

svError = 0 ;

# ###############################################

# Standard Variables

vDataRecCount = 0 ; 
vMetaDataRecCount = 0 ; 

 # ####################################################

# Constants

vCalMthAlias = 'CalMthName' ; 

 # ####################################################

vDim = pDim ;

IF( DimensionExists( vDim ) = 0 ) ;
  vMsg = 'The Dimension ' | vDim | ' does not exist.'    ;
  svError = 1 ;
  ItemReject( vMsg ) ;
ENDIF ;

vHier = pHier ; 

IF( HierarchyExists( vDim , vHier ) = 0 ) ;
  vMsg = 'For Dimension ' | vDim | ' the Hierarchy ' | vHier | ' does not exist ' ; 
  svError = 1 ;
  ItemReject( vMsg ) ;
ENDIF ;

vHierTop = pHierTop ;

IF( ElementIndex(vDim , vHier , vHierTop ) = 0 ) ;
  vMsg = 'Top Element ' | vHierTop| ' does not exist in Dimension ' | vDim | ' Hierarchy ' | vHier ;
  svError = 1 ;
  ItemReject( vMsg ) ;
ENDIF ;

vPath = pPath ;

IF( vPath @= '' ) ;
  svError = 1 ;
  vMsg = 'Path cannot be blank' ; 
  ItemReject( vMsg ) ;
ENDIF ;

 # ####################################################

vTargetDim = vDim ;

 # ####################################################

vCurlyHierDim = '}Hierarchies_' | vDim ;

# ##########################################################

# Make up the full Path to the File and
# check that it exists

vFile = vDim | '_FinYr.csv' ; 

vPathFile = vPath | vFile ;

IF( FileExists( vPathFile ) = 0 ) ;
  svError = 1 ;
  vMsg = 'Path File ' | vPathFile | ' does not exist. Remember that the path must be relative to the server, not the client.' ; 
  ItemReject( vMsg ) ;
ENDIF ;

# #################################

# Change Data Source to path file

DatasourceNameForServer= vPathFile ;

DataSourceType = 'CHARACTERDELIMITED' ;
DatasourceASCIIDelimiter = ',' ;
DatasourceASCIIDecimalSeparator = '.' ;
DatasourceASCIIThousandSeparator = ',' ;
DatasourceASCIIQuoteCharacter = '"' ;
DatasourceASCIIHeaderRecords = 1 ;


# #################################


573,26

#****Begin: Generated Statements***
#****End: Generated Statements****


# NON-STANDARD CUT DOWN ERROR HANDLING

# SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS

# M E T A D A T A    T A B   S T A R T

IF( svError = 1 ) ;
  ProcessBreak ;
ENDIF ;

vMetaDataRecCount = vMetaDataRecCount + 1 ;

# SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS

# ##################################################

vFinYrAlias = 'F' | trim(StartMthNum )  ;

AttrInsert( vDim , '' , vFinYrAlias , 'A' ) ; 


574,143

#****Begin: Generated Statements***
#****End: Generated Statements****

# NON-STANDARD CUT DOWN ERROR HANDLING

# SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS

# D A T A    T A B   S T A R T

IF( svError = 1 ) ;
  ProcessBreak ;
ENDIF ;

vDataRecCount = vDataRecCount + 1 ;

# SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS

# #######################################################

vAlias = 'F' | trim(StartMthNum )  ;

# #######################################################

vSubSuffix = 'Default' ;

vSub = vAlias | '_' | vSubSuffix  ; 

IF( HierarchySubsetExists( vTargetDim,  vHier, vSub ) = 1 ) ;
  HierarchySubsetDeleteAllElements( vDim , vHier , vSub ) ;
ELSE ;
  HierarchySubsetCreate( vDim , vHier , vSub ) ;
ENDIF ;
HierarchySubsetElementInsert( vDim , vHier , vSub , vHierTop , 1 );
IF( vHier @= vDim ) ;
  SubsetAliasSet( vDim , vSub, vAlias ) ;
ELSE ;
  HierarchySubsetAliasSet( vDim , vHier, vSub, vAlias ) ;
ENDIF ;

# ##

vSubSuffix = 'Hier' ;

vMDX = '{HIERARCHIZE(  {TM1SUBSETALL([' | vDim | '].[' | vHier | '])}  )} ' ;

vSub = vAlias | '_' | vSubSuffix  ; 

IF( HierarchySubsetExists( vTargetDim,  vHier, vSub ) = 0 ) ;
  HierarchySubsetCreate( vDim , vHier , vSub ) ;
ENDIF ;
HierarchySubsetMDXSet( vDim , vHier , vSub , vMDX );
IF( vHier @= vDim ) ;
  SubsetAliasSet( vDim , vSub, vAlias ) ;
ELSE ;
  HierarchySubsetAliasSet( vDim , vHier, vSub, vAlias ) ;
ENDIF ;

# ##

vSubSuffix = 'Base' ;

vMDX = '{ TM1SORT( { TM1FILTERBYLEVEL(  {TM1SUBSETALL( [' | vDim | '].[' | vHier | '] ) } , 0 ) } , ASC )  } ' ;

vSub = vAlias | '_' | vSubSuffix  ; 

IF( HierarchySubsetExists( vTargetDim,  vHier, vSub ) = 0 ) ;
  HierarchySubsetCreate( vDim , vHier , vSub ) ;
ENDIF ;
HierarchySubsetMDXSet( vDim , vHier , vSub , vMDX );
IF( vHier @= vDim ) ;
  SubsetAliasSet( vDim , vSub, vAlias ) ;
ELSE ;
  HierarchySubsetAliasSet( vDim , vHier, vSub, vAlias ) ;
ENDIF ;

# ##

vSubSuffix = 'Consolidations' ;

vMDX =     '{EXCEPT({TM1SUBSETALL( [' | vDim | '].[' | vHier | '] )},{TM1FILTERBYLEVEL( {TM1SUBSETALL( [' | vDim | '].[' | vHier | '] )}, 0)} ) }' ;

vSub = vAlias | '_' | vSubSuffix  ; 

IF( HierarchySubsetExists( vTargetDim,  vHier, vSub ) = 0 ) ;
  HierarchySubsetCreate( vDim , vHier , vSub ) ;
ENDIF ;
HierarchySubsetMDXSet( vDim , vHier , vSub , vMDX );
IF( vHier @= vDim ) ;
  SubsetAliasSet( vDim , vSub, vAlias ) ;
ELSE ;
  HierarchySubsetAliasSet( vDim , vHier, vSub, vAlias ) ;
ENDIF ;

# ##

# Period Totals

# This is really just so that subsets are created in which the base level elements in the subsets
# will have each Fn Alias. There is no alias for the Period Totals

# Eg Hier Name F4_Per_Tot

IF( subst( vHier , 4 , 7 ) @= 'Per_Tot' ) ;

  vMDX = '{TM1FILTERBYLEVEL( {TM1DRILLDOWNMEMBER( { [' | vDim | '].[' | vHier | '].[' | vHierTop | '] } , ALL, RECURSIVE )}, 1,2)}' ;

  vSubSuffix = 'Full Year and Periods' ;

  vSub = vAlias | '_' | vSubSuffix  ; 

  IF( HierarchySubsetExists( vTargetDim,  vHier, vSub ) = 0 ) ;
    HierarchySubsetCreate( vDim , vHier , vSub ) ;
  ENDIF ;
  HierarchySubsetMDXSet( vDim , vHier , vSub , vMDX );
  IF( vHier @= vDim ) ;
    SubsetAliasSet( vDim , vSub, vAlias ) ;
  ELSE ;
    HierarchySubsetAliasSet( vDim , vHier, vSub, vAlias ) ;
  ENDIF ;

  # ##

  vSubSuffix = 'Periods and Full Year' ;

  vSub = vAlias | '_' | vSubSuffix  ; 

  IF( HierarchySubsetExists( vTargetDim,  vHier, vSub ) = 0 ) ;
    HierarchySubsetCreate( vDim , vHier , vSub ) ;
  ENDIF ;
  HierarchySubsetMDXSet( vDim , vHier , vSub , vMDX );
  IF( vHier @= vDim ) ;
    SubsetAliasSet( vDim , vSub, vAlias ) ;
  ELSE ;
    HierarchySubsetAliasSet( vDim , vHier, vSub, vAlias ) ;
  ENDIF ;

  SubsetExpandAboveSet( vDim | ':' | vHier , vSub , 1 ) ;

ENDIF ;

# ############################################################

575,39

#****Begin: Generated Statements***
#****End: Generated Statements****

# NON-STANDARD CUT DOWN ERROR HANDLING

# SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS

# EPILOG START  (after any CubeSetLogChanges)

# ##################################################

# Trap for rejects due to eg inability to convert a string to number 
# or some other such file formatting issue.

vErrorFile = GetProcessErrorFileName() ;

IF( vErrorFile @<> '' & svError = 0 ) ;
  svError = 1 ;
  vMsg = 'One or more lines were rejected, ' | 
          'possibly due to formatting issues in the source data. ' | 
           'Please check ' | vErrorFile | '  for more information. ' ; 
  ItemReject( vMsg ) ;
ENDIF ;

IF( svError = 1 ) ;

  # Raise an error

  ProcessQuit ;

ENDIF ;

# ##################################################

# SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS



576,CubeAction=1511DataAction=1503CubeLogChanges=0
930,0
638,1
804,0
1217,0
900,
901,
902,
938,0
937,
936,
935,
934,
932,0
933,0
903,
906,
929,
907,
908,
904,0
905,0
909,0
911,
912,
913,
914,
915,
916,
917,0
918,1
919,0
920,50000
921,""
922,""
923,0
924,""
925,""
926,""
927,""

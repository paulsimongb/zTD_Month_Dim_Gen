601,100
602,"zTD_Time_Upd_Dim_and_Named_Hier_Structure_Param_Dim_Path"
562,"VIEW"
586,"zTD_Wide_Cube"
585,"zTD_Wide_Cube"
564,
565,"orW_2?qExwl1LJyaSRa9N@xpf?L=r7KS7z>GQ[lBRHQeLPldOL[Y7NU2TsRKY=Fn\ZI;F_6cA3]:s>U;Vhr:733qh`N^7Ao0K?sp;dPKUjP<yClfvEzRb=DLQK^Fmxj2ceMZ?coIlKviu35J8tVR0Wa\\]n;2=>UfvAMrDrP2rYYJP;WhW2^_teLR3f;5:1n7^DGZanI"
559,1
928,0
593,
594,
595,
597,
598,
596,
800,
801,
566,0
567,","
588,"."
589,","
568,""""
570,zTD_All
571,
569,0
592,0
599,1000
560,2
pDim
pPath
561,2
2
2
590,2
pDim,"B_Effective_Mth"
pPath,"E:\Dropbox\TM1\zTD_Dev\ImportData\"
637,2
pDim,"Time Dim to be created/updated"
pPath,"Folder Path relative to the Server where the CSV files were generated by the spreadsheet."
577,8
vHier
vType
vChild
vParent
vWeight
NVALUE
SVALUE
VALUE_IS_STRING
578,8
2
2
2
2
1
1
2
1
579,8
1
2
3
4
5
0
0
0
580,8
0
0
0
0
0
0
0
0
581,8
0
0
0
0
0
0
0
0
582,21
VarType=32ColType=827
VarType=32ColType=827
VarType=32ColType=827
VarType=32ColType=827
VarType=33ColType=827
IgnoredInputVarName=zTD_D6VarType=32ColType=1165
IgnoredInputVarName=zTD_D7VarType=32ColType=1165
IgnoredInputVarName=zTD_D8VarType=32ColType=1165
IgnoredInputVarName=zTD_D9VarType=32ColType=1165
IgnoredInputVarName=zTD_D10VarType=32ColType=1165
IgnoredInputVarName=zTD_D11VarType=32ColType=1165
IgnoredInputVarName=zTD_D12VarType=32ColType=1165
IgnoredInputVarName=zTD_D13VarType=32ColType=1165
IgnoredInputVarName=zTD_D14VarType=32ColType=1165
IgnoredInputVarName=zTD_D15VarType=32ColType=1165
IgnoredInputVarName=zTD_D16VarType=32ColType=1165
IgnoredInputVarName=zTD_D17VarType=32ColType=1165
IgnoredInputVarName=zTD_D18VarType=32ColType=1165
IgnoredInputVarName=zTD_D19VarType=32ColType=1165
IgnoredInputVarName=zTD_D20VarType=32ColType=1165
IgnoredInputVarName=ValueVarType=33ColType=1165
603,0
572,106

#****Begin: Generated Statements***
#****End: Generated Statements****

vThisPro = 'zTD_Time_Upd_Dim_and_Named_Hier_Structure_Param_Dim_Path' ;

# Copyright Success Cubed Ltd 2008-2020

# This builds the time dimension structure from the CSV
# file output from the spreadsheet

# NON-STANDARD CUT DOWN ERROR HANDLING
# This process does not use the full set of zTD
# process initialisation and error handling routines

# ###############################################

# Session Variables

NumericSessionVariable('svError') ;

svError = 0 ;

# ###############################################

# Standard Variables

vMetaDataRecCount = 0 ; 

# ###############################################

# Variables

vRejectCount = 0 ; 

# ###############################################

# Validate Parameters

# #################################

vDim = pDim ;

IF( vDim @= '' ) ;
  svError = 1 ;
  vMsg = 'Dimension name cannot be blank' ; 
  ItemReject( vMsg ) ;
ENDIF ;

IF( DimensionExists( vDim) = 0 ) ;
  svError = 1 ;
  vMsg = 'Dimension ' | vDim | ' does not exist. Run the Setup step from the spreadsheet.' ; 
  ItemReject( vMsg ) ;
ENDIF ;

# #################################

vPath = pPath ;

IF( vPath @= '' ) ;
  svError = 1 ;
  vMsg = 'Path cannot be blank' ; 
  ItemReject( vMsg ) ;
ENDIF ;

# #################################

# We do not break consolidation links in the dimension as
# it should only ever be adding
# If unwinding (breaking links) is required 
# both the classic hierarchy and all
# named hierarchies will need to be unwound
# Routines can be supplied to do this

# #################################

# Make up the full Path to the File and
# check that it exists

vFile = vDim | '.CSV' ;

vPathFile = vPath | vFile ;

IF( FileExists( vPathFile ) = 0 ) ;
  svError = 1 ;
  vMsg = 'Path File ' | vPathFile | ' does not exist. Remember that the path must be relative to the server, not the client.' ; 
  ItemReject( vMsg ) ;
ENDIF ;

# #################################

# Change Data Source to path file

DatasourceNameForServer= vPathFile ;

DataSourceType = 'CHARACTERDELIMITED' ;
DatasourceASCIIDelimiter = ',' ;
DatasourceASCIIDecimalSeparator = '.' ;
DatasourceASCIIThousandSeparator = ',' ;
DatasourceASCIIQuoteCharacter = '"' ;
DatasourceASCIIHeaderRecords = 1 ;


# #################################


573,57

#****Begin: Generated Statements***
#****End: Generated Statements****

# NON-STANDARD CUT DOWN ERROR HANDLING

# SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS

# M E T A D A T A    T A B   S T A R T

IF( svError = 1 ) ;
  ProcessBreak ;
ENDIF ;

vMetaDataRecCount = vMetaDataRecCount + 1 ;

# SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS

# ##############################################################

IF( vType @= 'N' ) ;
  IF( HierarchyElementExists( vDim , vHier , vChild ) = 0 ) ;
    HierarchyElementInsert( vDim , vHier , '' , vChild , 'N' ) ;
  ENDIF ;
ELSEIF( vType @= 'C' ) ;
  # This is really only for the Top of the Classic Hier where
  # the element needs to go in as a C but with no parent.
  IF( HierarchyElementExists( vDim , vHier , vChild ) = 0 ) ;
    HierarchyElementInsert( vDim , vHier , '' , vChild , 'C' ) ;
  ENDIF ;
ELSEIF( vType @= 'NC' % vType @= 'CC'  ) ;
  IF( vParent @=  '' ) ;
    vRejectCount = vRejectCount + 1 ; 
    vMsg = 'On row ' | NumberToString( vMetaDataRecCount ) | ' for Child ' | vChild |
                 ' the Parent is blank but on a type ' | vType | ' it the parent should be given. ' | 
                ' Error in file creation.' ; 
    ItemReject( vMsg ) ;
  ENDIF ;
  IF( HierarchyElementExists( vDim , vHier , vChild ) = 0 ) ; 
    # Insert as N or C depending on first letter of Type
    HierarchyElementInsert( vDim , vHier , '' , vChild , subst( vType , 1, 1 )  ) ;
  ENDIF ;
  # The Parent must always be a C by definition
  HierarchyElementInsert( vDim , vHier , '' , vParent , 'C' ) ;
  HierarchyElementComponentAdd( vDim , vHier , vParent , vChild , vWeight ) ;
ELSE ;
    vRejectCount = vRejectCount + 1 ; 
    vMsg = 'On row ' | NumberToString( vMetaDataRecCount ) | ' for Child ' | vChild |
                 ' the type is invalid .' | 
                ' Error in file creation.' ; 
    ItemReject( vMsg ) ;
ENDIF ;

# ##############################################################



574,3

#****Begin: Generated Statements***
#****End: Generated Statements****
575,45

#****Begin: Generated Statements***
#****End: Generated Statements****

# NON-STANDARD CUT DOWN ERROR HANDLING

IF( vRejectCount > 0 ) ; 
  svError = 1 ;
ENDIF ;

# NON-STANDARD CUT DOWN ERROR HANDLING

# SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS

# EPILOG START  (after any CubeSetLogChanges)

# ##################################################

# Trap for rejects due to eg inability to convert a string to number 
# or some other such file formatting issue.

vErrorFile = GetProcessErrorFileName() ;

IF( vErrorFile @<> '' & svError = 0 ) ;
  svError = 1 ;
  vMsg = 'One or more lines were rejected, ' | 
          'possibly due to formatting issues in the source data. ' | 
           'Please check ' | vErrorFile | '  for more information. ' ; 
  ItemReject( vMsg ) ;
ENDIF ;

IF( svError = 1 ) ;

  # Raise an error

  ProcessQuit ;

ENDIF ;

# ##################################################

# SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS



576,CubeAction=1511DataAction=1503CubeLogChanges=0
930,0
638,1
804,0
1217,0
900,
901,
902,
938,0
937,
936,
935,
934,
932,0
933,0
903,
906,
929,
907,
908,
904,0
905,0
909,0
911,
912,
913,
914,
915,
916,
917,0
918,1
919,0
920,50000
921,""
922,""
923,0
924,""
925,""
926,""
927,""
